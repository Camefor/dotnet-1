(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{402:function(e,t,_){"use strict";_.r(t);var v=_(26),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"oauth2-0-openid-connect"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-openid-connect"}},[e._v("#")]),e._v(" OAuth2.0 / OpenID Connect")]),e._v(" "),_("h2",{attrs:{id:"_1-oauth2-0"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-oauth2-0"}},[e._v("#")]),e._v(" 1. OAuth2.0")]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("是一个委托授权协议，它可以让控制资源的人(用户)允许某个应用代表它们来访问它们所控制的资源。应用从资源所有者处获得授权"),_("code",[e._v("(")]),e._v("Authorization"),_("code",[e._v(")和安全访问令牌(")]),e._v("Access Token"),_("code",[e._v(")，随后便可以使用")]),e._v("Token`进行资源访问。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://i.loli.net/2021/04/07/uZNBSAokXK3mQrM.jpg",alt:"OAuth2.0"}})]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("授权协议中设计的对象主要涉及 资源所有者("),_("code",[e._v("Resource Owner")]),e._v(")"),_("code",[e._v(",客户端应用（")]),e._v("Client Application"),_("code",[e._v("）和受保护资源(")]),e._v("Protected Resource`)。三者关系如上图所示。")]),e._v(" "),_("h3",{attrs:{id:"_1-1-授权服务器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-授权服务器"}},[e._v("#")]),e._v(" 1.1 授权服务器")]),e._v(" "),_("p",[e._v("资源所有者对客户端的授权一般是通过授权服务器("),_("code",[e._v("Authorization Server")]),e._v(")作为中介完成的。")]),e._v(" "),_("p",[e._v("当客户端应用需要访问受保护的资源时，客户端会向资源所有者申请授权并将其重定向到授权服务器，资源所有者在授权服务器进行身份认证(登录)后执行授权操作(一般是点击同意授权)并生成授权码，之后重定向回到客户端应用。此时客户端应用携带授权码向授权服务器发出授权申请，授权服务器验证授权码并生成安全令牌返回给返回到客户端，客户端携带安全令牌申请访问受保护资源的服务器，服务器鉴权通过后返回响应。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://i.loli.net/2021/04/07/IFDMimE93XdtlTo.jpg",alt:"授权服务器工作流程"}})]),e._v(" "),_("p",[e._v("如上图所示的是"),_("code",[e._v("OAuth2.0")]),e._v("协议中的较为流行的授权码("),_("code",[e._v("Authorization Code")]),e._v(")类型的授权方式。")]),e._v(" "),_("h3",{attrs:{id:"_1-2-客户端类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-客户端类型"}},[e._v("#")]),e._v(" 1.2 客户端类型")]),e._v(" "),_("p",[e._v("在OAuth2.0中我们常将客户端分为机密客户端（"),_("code",[e._v("Confidential Client")]),e._v("）和公开客户端（"),_("code",[e._v("Public Client")]),e._v("）两种类型。")]),e._v(" "),_("p",[e._v("机密客户端一般含有服务端，相对安全，有能力维护其凭证的机密性，如Asp.Net Core MVC应用。")]),e._v(" "),_("p",[e._v("公开客户端通常运行在客户端设备，内容相对相对透明且不安全，数据存在被篡改的风险，故而也无法维护其凭证的机密性，如Web端JavaScript应用，移动App，桌面端应用程序等。")]),e._v(" "),_("h3",{attrs:{id:"_1-3-授权类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-授权类型"}},[e._v("#")]),e._v(" 1.3 授权类型")]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("协议中常用的授权类型("),_("a",{attrs:{href:"http://docs.identityserver.io/en/release/topics/grant_types.html",target:"_blank",rel:"noopener noreferrer"}},[_("code",[e._v("Grant Type")]),_("OutboundLink")],1),e._v(")有以下几种：")]),e._v(" "),_("ul",[_("li",[e._v("客户端凭据授权（"),_("code",[e._v("Client Credential")]),e._v("）。")]),e._v(" "),_("li",[e._v("资源所有者密码凭据授权（"),_("code",[e._v("Resource Owner Password Credentials")]),e._v("）")]),e._v(" "),_("li",[e._v("授权码授权（"),_("code",[e._v("Authorization Code")]),e._v("）")]),e._v(" "),_("li",[e._v("隐式授权（"),_("code",[e._v("Implicit")]),e._v("）")]),e._v(" "),_("li",[e._v("刷新令牌授权（"),_("code",[e._v("Refresh Token")]),e._v("）")])]),e._v(" "),_("p",[e._v("客户端凭据授权（"),_("code",[e._v("Client Credential")]),e._v("）是最简单的授权方式，适用于服务器间的交互，安全令牌用于标识一个客户端应用而不是一个具体用户。此模式仅作客户端认证，不需要使用授权服务器中的用户资源。客户端使用"),_("code",[e._v("Client ID")]),e._v("和"),_("code",[e._v("Client Secret")]),e._v("认证到授权服务器以获得安全令牌。这种模式是最方便但最不安全的模式。因此这就要求我们对客户端完全信任，且客户端自身也是安全的。")]),e._v(" "),_("p",[e._v("资源所有者密码凭据授权（"),_("code",[e._v("Resource Owner Password Credentials")]),e._v("）方式会需要资源所有者将用户名密码等安全认证数据提供给客户端，客户端使用资源所有者提供的密码等认证数据向授权服务器换取安全令牌，之后客户端使用安全令牌访问保护资源。此方式被称作“非交互式”授权，通常不推荐使用，只有资源所有者（用户）可以高度信任客户端应用且其它授权方式不可用时才会采用此方式。")]),e._v(" "),_("p",[e._v("授权码授权（"),_("code",[e._v("Authorization Code")]),e._v("）方式适用于机密客户端。授权服务器会对资源所有者和客户端进行双重认证。当资源所有者在授权服务器身份认证后，授权服务器会生成授权码返回给机密客户端的用户端，如浏览器。客户端再携带授权码请求授权服务器进行身份认证，授权服务器验证授权码无误后生成安全令牌返回给机密客户端的服务端，如Web服务器，客户端应用会将此安全令牌保存在自己的服务端。如果客户端是一个Web应用，单次有效的授权码会返回给相对不安全的客户端浏览器，而长期有效的安全令牌则返回并保存在相对安全的Web服务器。")]),e._v(" "),_("p",[e._v("隐式授权（"),_("code",[e._v("Implicit")]),e._v("）是授权码授权的简化版本，故也称为简化授权。它用户用于基于浏览器的客户端应用，如Web SPA。隐式授权不会对客户端进行身份认证故也没有授权码环节，授权服务器会在资源所有者认证通过后直接将安全令牌通过浏览器返回给客户端。因为所有令牌传输都通过浏览器进行，因此"),_("code",[e._v("Refresh Token")]),e._v("等高级特性不能在此模式下使用。")]),e._v(" "),_("p",[e._v("刷新令牌（Refresh Token）授权用于客户端访问令牌过期时向授权服务器申请新的访问令牌，它只能发送给授权服务器并不能用于访问被保护资源，刷新令牌可以让客户端逐渐降低访问权限。刷新令牌仅支持"),_("code",[e._v("Hybrid flow, Authorization Code, Device flow, Resource owner password")]),e._v("。")]),e._v(" "),_("h3",{attrs:{id:"_1-4-endpoint"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-endpoint"}},[e._v("#")]),e._v(" 1.4 Endpoint")]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("中的授权服务器提供了授权端点（"),_("code",[e._v("Authorization Endpoint")]),e._v("）/ 令牌端点（"),_("code",[e._v("Token Endpoint")]),e._v("）等诸多端点。其中授权端点用于资源所有者访问授权服务器进行授权，令牌端点则用于客户端应用与授权服务器间的交互。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://i.loli.net/2021/04/09/2ErmGgCVWqKUMNT.jpg",alt:"OAuth2.0端点"}})]),e._v(" "),_("h3",{attrs:{id:"_1-5-scope"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-scope"}},[e._v("#")]),e._v(" 1.5 Scope")]),e._v(" "),_("p",[_("code",[e._v("Scope")]),e._v("代表资源所有者对被保护资源的权限范围划分。开发者可以根据实际业务需求自定义"),_("code",[e._v("Scope")]),e._v("划分粒度，比如把一组相关联的API资源划分为一个"),_("code",[e._v("Scope")]),e._v("。")]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("协议并有对定义访问令牌（"),_("code",[e._v("Access Token")]),e._v("）内容和格式，但要求令牌要能够描述出资源授权访问范围和有效期。")]),e._v(" "),_("h3",{attrs:{id:"_1-6-错误对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-错误对象"}},[e._v("#")]),e._v(" 1.6 错误对象")]),e._v(" "),_("p",[e._v("授权服务器发生错误时会返回以下错误对象。")]),e._v(" "),_("div",{staticClass:"language-json line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"error"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"错误类型"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"error_description"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"错误描述"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"error_uri"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"错误详情页面地址"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[e._v('"state"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v('"错误请求的相关数据"')]),e._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br")])]),_("p",[e._v("错误对象中"),_("code",[e._v("error")]),e._v("表示的错误类型一定存在，而其它三个字段则可能不存在。"),_("code",[e._v("Authorization Endpoint")]),e._v("中错误信息体现在URL的"),_("code",[e._v("QueryString")]),e._v("中，而"),_("code",[e._v("Token Endpoint")]),e._v("中则会以"),_("code",[e._v("application/json")]),e._v("格式作为响应体返回。")]),e._v(" "),_("p",[e._v("错误类型包含以下6种，通过名称就能看出其含义，这里不再赘述。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("invalid_request")])]),e._v(" "),_("li",[_("code",[e._v("invalid_client(401)")])]),e._v(" "),_("li",[_("code",[e._v("invalid_grant")])]),e._v(" "),_("li",[_("code",[e._v("unauthorized_client")])]),e._v(" "),_("li",[_("code",[e._v("unsuportted_grant_type")])]),e._v(" "),_("li",[_("code",[e._v("invalid_scope")])])]),e._v(" "),_("h2",{attrs:{id:"_2-openid-connect"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-openid-connect"}},[e._v("#")]),e._v(" 2. OpenID Connect")]),e._v(" "),_("p",[_("code",[e._v("OpenID Connect")]),e._v("是建立在"),_("code",[e._v("OAuth2.0")]),e._v("授权协议上的一个简单的身份认证层。"),_("code",[e._v("OpenID Connect")]),e._v("是兼容"),_("code",[e._v("OAuth2.0")]),e._v("的开放标准和认证协议，它在"),_("code",[e._v("OAuth2.0")]),e._v("授权协议的基础上添加了一些组件来提供身份认证的能力。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://i.loli.net/2021/04/16/TJ9M2RzIexNuSiy.png",alt:"OAuth2.0与身份认证协议的角色映射"}})]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("与"),_("code",[e._v("OpenID Connect")]),e._v("的成员角色映射关系如上图所示。")]),e._v(" "),_("h3",{attrs:{id:"_2-1-access-token-与-identity-token"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-access-token-与-identity-token"}},[e._v("#")]),e._v(" 2.1 Access Token 与 Identity Token")]),e._v(" "),_("p",[_("code",[e._v("OAuth2.0")]),e._v("中的"),_("code",[e._v("Access Token")]),e._v("允许客户端访问API资源。访问令牌代表了登录用户（资源所有者）， 其包含了客户端和用户(非必要)信息。")]),e._v(" "),_("p",[_("code",[e._v("OpenID Connect")]),e._v("中提供的"),_("code",[e._v("Identity Token")]),e._v("包含了用户认证结果和会话状态，包含用户信息和其它身份数据一般通过一组声明("),_("code",[e._v("Claims")]),e._v(")表示，使用JWT格式包装后与"),_("code",[e._v("Access Token")]),e._v("一起返回给客户端。")]),e._v(" "),_("p",[_("code",[e._v("OpenID Connect")]),e._v("提供了一个"),_("code",[e._v("UserInfo")]),e._v("端点，通过它可以获取用户信息。此外协议还提供了如下一组标识身份的"),_("code",[e._v("scopes")]),e._v("和"),_("code",[e._v("claims")]),e._v("。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("profile")])]),e._v(" "),_("li",[_("code",[e._v("email")])]),e._v(" "),_("li",[_("code",[e._v("address")])]),e._v(" "),_("li",[_("code",[e._v("phone")])])]),e._v(" "),_("h3",{attrs:{id:"_2-2-flow"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-flow"}},[e._v("#")]),e._v(" 2.2 Flow")]),e._v(" "),_("p",[_("code",[e._v("OpenID Connect")]),e._v("有以下几种常用流程("),_("code",[e._v("Flow")]),e._v(")：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Authorization Code Flow")])]),e._v(" "),_("li",[_("code",[e._v("Implicit Flow")])]),e._v(" "),_("li",[_("code",[e._v("Hybrid Flow")])]),e._v(" "),_("li",[_("code",[e._v("Device Flow")])])]),e._v(" "),_("p",[_("code",[e._v("Authorization Code Flow")]),e._v(" 和 "),_("code",[e._v("Implicit Flow")]),e._v(" 两者的流程已在"),_("a",{attrs:{href:"#_1-3-%E6%8E%88%E6%9D%83%E7%B1%BB%E5%9E%8B"}},[e._v("OAuth2.0授权类型")]),e._v("中讲解。")]),e._v(" "),_("p",[_("code",[e._v("Hybrid Flow")]),e._v(" 是"),_("code",[e._v("Implicit")]),e._v("和"),_("code",[e._v("Authorization Code")]),e._v("的组合,它有多种授权类型组合，最典型的是"),_("code",[e._v("code id_token")]),e._v("。此模式下"),_("code",[e._v("Identity Token")]),e._v("会经由浏览器传输，其含有经过签名的授权码等响应内容，这减少了许多针对浏览器通道的攻击。此模式适用于需要使用安全令牌和刷新令牌的原生应用，如\bWeb机密客户端，桌面端和移动应用。")]),e._v(" "),_("p",[_("code",[e._v("Device Flow")]),e._v("用于的无浏览器和输入设备的客户端，它将用户认证授权过程依附于设备，如智能手机等，它最典型的是应用于物联网设备客户端。")]),e._v(" "),_("h2",{attrs:{id:"_3-identityserver"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-identityserver"}},[e._v("#")]),e._v(" 3. IdentityServer")]),e._v(" "),_("p",[_("code",[e._v("OpenID Connect和OAuth 2.0")]),e._v("的结合是在可预见的未来保护现代应用程序的最佳方法。"),_("a",{attrs:{href:"https://identityserver4.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IdentityServer"),_("OutboundLink")],1),e._v("中间件是Asp.NET Core对"),_("code",[e._v("OpenID Connect")]),e._v("和"),_("code",[e._v("OAuth 2.0")]),e._v("的实现，其经过高度的优化用于解决当今移动、本机和web应用程序的典型安全认证授权等问题。")]),e._v(" "),_("p",[_("code",[e._v("IdentityServer")]),e._v("在不同场景中有不同称谓，如身份认证服务器、安全令牌服务器、身份提供者、授权服务器等。它通常有以下作用d：")]),e._v(" "),_("ul",[_("li",[e._v("保护资源")]),e._v(" "),_("li",[e._v("使用本地账户或第三方账号进行身份认证")]),e._v(" "),_("li",[e._v("提供会话管理和单点登录")]),e._v(" "),_("li",[e._v("管理和认证\b客户端应用")]),e._v(" "),_("li",[e._v("向客户端颁发"),_("code",[e._v("Identity Token")]),e._v("和"),_("code",[e._v("Access Token")])]),e._v(" "),_("li",[e._v("验证令牌")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://i.loli.net/2021/04/17/cohJnk7P5Furx9j.png",alt:"IdentityServer"}})]),e._v(" "),_("p",[e._v("客户端应用在申请认证授权之前要确保已经注册到"),_("code",[e._v("Identity Server")]),e._v("。")]),e._v(" "),_("p",[e._v("被保护资源可以是用户身份信息或API资源，每一个资源都有唯一名称标识。用户身份数据通常是一组身份声明(Claims)，包含诸如用户名、邮件等信息。API资源最典型的是Web API。")])])}),[],!1,null,null,null);t.default=o.exports}}]);